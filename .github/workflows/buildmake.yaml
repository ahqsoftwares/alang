name: ALang Builder Action

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - master

jobs:
  create_release:
    name: Make draft release
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install Packages
        run: npm install .
        working-directory: js

      - name: Create Release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const {
              body,
              version
            } = await require("./js/index.js");

            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `lang-${version}`,
              name: `Alang v${version}`,
              body,
              draft: true,
              prerelease: false
            })
            return data.id

  build_and_test:
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    name: Build & Test (${{ matrix.os }})

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build Lang
        run: cargo build --release

      - name: Build Cli
        run: cargo build --release
        working-directory: cli

      - name: Build Compiler
        run: cargo build --release
        working-directory: compiler

      - name: Build Interpreter
        run: cargo build --release
        working-directory: interpreter

      - name: Build Packager
        run: cargo build --release
        working-directory: packager

      - name: Build Packloader
        run: cargo build --release
        working-directory: packloader

      - name: Install Packages
        run: npm install .
        working-directory: js

      - name: Get & Push Assets
        run: node js/zip.js
        env:
          OS: ${{ matrix.os }}
          releaseid: ${{ needs.create_release.outputs.release_id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'debug.zip'
          path: '.'
      
      - name: Upload as Debug
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}.zip
          path: debug.zip

      

      